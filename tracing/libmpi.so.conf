; mpi.h

; int MPI_Init(int *argc, char ***argv)
int MPI_Init(int*, string**);

; int MPI_Comm_size(MPI_Comm comm, int *size /* out */)
int MPI_Comm_size(+hex(int), int*);

; int MPI_Comm_rank(MPI_Comm comm, int *rank /* out */)
int MPI_Comm_rank(+hex(int), int*);

; int MPI_Get_processor_name(char *name, int *resultlen)
int MPI_Get_processor_name(+string*, int*);

; int MPI_Bcast(void *buffer, int count, MPI_Datatype datatype, int root, MPI_Comm comm)
int MPI_Bcast(void *, int, int, int, hex(int) );

; int MPI_Reduce(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op,
;               int root, MPI_Comm comm)
int MPI_Reduce(void*, void *, int, int, int, int, hex(int));

;double MPI_Wtime(void)
double MPI_Wtime()

; int MPI_Finalize(void)
int MPI_Finalize();
